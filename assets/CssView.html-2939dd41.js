import{_ as a,r as e,o as c,c as i,a as s,b as n,d as l,e as p}from"./app-fd419a65.js";const o={},d=s("h1",{id:"css-样式层叠表",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#css-样式层叠表","aria-hidden":"true"},"#"),n(" css(样式层叠表)")],-1),r=s("h2",{id:"介绍css",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#介绍css","aria-hidden":"true"},"#"),n(" 介绍css")],-1),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS",target:"_blank",rel:"noopener noreferrer"},h=p(`<p>关于css,基础不用说,谁都会.但是如何要表现出一个好看的页面,只能多练,多看,多学习.<br> css是一门很有意思的语言,它可以让你的页面变得丰富多彩,但是它也有很多的坑,比如说浏览器兼容性,比如说css的性能问题,比如说css的可维护性等等.</p><h2 id="css层叠冲突的计算过程" tabindex="-1"><a class="header-anchor" href="#css层叠冲突的计算过程" aria-hidden="true">#</a> css层叠冲突的计算过程</h2><p>css的层叠冲突的计算过程是这样的:</p><ol><li>比较重要性</li><li>比较特殊性</li><li>比较源次序</li></ol><h3 id="_1-比较重要性" tabindex="-1"><a class="header-anchor" href="#_1-比较重要性" aria-hidden="true">#</a> 1. 比较重要性</h3><p>重要性从高到低:</p><ol><li>带有<code>!important</code>的作者属性</li><li>带有<code>!important</code>的默认属性</li><li>作者样式</li><li>默认样式</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 浏览器默认样式 */</span>
<span class="token selector">h1</span><span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 作者样式 */</span>
<span class="token selector">h1</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span> <span class="token comment">/* 最后应用的样式 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很好理解,自己写的<code>!important</code>的优先级是最高的,然后才是浏览器的默认样式的<code>!important</code>样式.(一般也很少写<code>!important</code>)<br> 然后是自己写的样式,最后优先级最低是浏览器的默认样式.如果比较完这一步已经没有冲突的样式了,那么就不用比较后面的了.</p><h3 id="_2-比较特殊性" tabindex="-1"><a class="header-anchor" href="#_2-比较特殊性" aria-hidden="true">#</a> 2. 比较特殊性</h3><table><thead><tr><th style="text-align:center;">style</th><th style="text-align:center;">id</th><th style="text-align:center;">属性</th><th style="text-align:center;">元素</th></tr></thead><tbody><tr><td style="text-align:center;">内联：1; 否则：0</td><td style="text-align:center;">id选择器的数量</td><td style="text-align:center;">属性、类、伪类的数量</td><td style="text-align:center;">元素、伪元素的数量</td></tr></tbody></table><p>如下面的例子</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.red</span><span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">h1</span><span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">h1.test</span><span class="token punctuation">{</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">div h1.red</span><span class="token punctuation">{</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>学习css<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上到下一共四个css规则表达式,那么我们来看看这四个规则表达式的特殊性是多少.<br> 从上往下依次是(<code>.red</code>、<code>h1</code>、<code>h1.test</code>、<code>div h1.red</code>):</p><table><thead><tr><th style="text-align:center;">style</th><th style="text-align:center;">id</th><th style="text-align:center;">属性</th><th style="text-align:center;">元素</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">2</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>tips: class选择器也是属性选择器的一种，不过比较特殊罢了。</p></div><p>先比较第一列<code>style</code>，没有胜出者，全是0，则无人淘汰。<br> 比较第二列<code>id</code>，依旧没有胜出者，全是0，则无人淘汰。 再来比较第三列<code>属性</code>，我们可以看到第二个<code>h1</code>,再比较属性选择器时候，就它是0，第一个被淘汰掉 最后比较第四列元素选择器的数量，很明显可以看到第四个<code>div h1.red</code>的元素选择器数量最多，所以最后应用的样式是第四个<code>div h1.red</code>的样式.<br> 所以本次比较特殊性的获胜者是<code>div h1.red</code>。但是这个里面好像还有冲突？？接下来比较源次序。</p><h3 id="_3-比较源次序" tabindex="-1"><a class="header-anchor" href="#_3-比较源次序" aria-hidden="true">#</a> 3. 比较源次序</h3><p>源次序就是指css的书写顺序，谁写在后面，谁的优先级就高。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>    <span class="token selector">div h1.red</span><span class="token punctuation">{</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比较源次序的时候，我们可以看到<code>font-size: 3em;</code>写在前面，<code>font-size: 30px;</code>写在后面，所以最后应用的样式是<code>font-size: 30px;</code>。</p>`,22);function v(k,b){const t=e("ExternalLinkIcon");return c(),i("div",null,[d,r,s("blockquote",null,[s("p",null,[s("a",u,[n("MDN-CSS"),l(t)])])]),h])}const m=a(o,[["render",v],["__file","CssView.html.vue"]]);export{m as default};
